name: com.dynatrace.extension.snmp-generic-cisco-device
version: 1.13.0
minEECVersion: '1.279'
minDynatraceVersion: '1.279'
author:
  name: Dynatrace

vars:
  - id: ext.activationtag
    displayName: Extension activation tag
    type: text
  - id: if_name
    type: text
    displayName: Pattern to filter capturing of Interfaces by Name
  - id: if_admin_status
    type: text
    displayName: Pattern to filter capturing of Interfaces by Admin Status
  - id: if_oper_status
    type: text
    displayName: Pattern to filter capturing of Interfaces by Operational Status

metrics:
  - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.total.5min.rev
    metadata:
      displayName: CPU busy
      description: Overall CPU busy percentage in the last 5 min.
      unit: Percent
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.loadavg.5min
    metadata:
      displayName: CPU load
      description: Overall CPU load average in the last 5 min.
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.used
    metadata:
      displayName: CPU memory used
      description: Overall CPU wide sys mem currently under use
      unit: KiloByte
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.free
    metadata:
      displayName: CPU memory free
      description: Overall CPU wide sys mem free
      unit: KiloByte
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.envmon.temperature.status.value
    metadata:
      displayName: Fan temperature
      description: Current temperature of the fan instrumented
      unit: Unspecified
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.envmon.fan.state
    metadata:
      displayName: Fan state
      description: Current state of the fan instrumented
      unit: Unspecified
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.pkts.count
    metadata:
      displayName: Messages delivered
      description: Total number of messages delivered from the transport service
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.silentdrops.count
    metadata:
      displayName: Silently dropped PDUs
      description: Number of silently dropped PDUs due to the large reply size
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.versions.count
    metadata:
      displayName: Unsupported SNMP version messages
      description: Total number of messages delivered with an unsupported SNMP version
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.names.count
    metadata:
      displayName: Messages with bad community names
      description: Number of messages with an unknown SNMP community
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.uses.count
    metadata:
      displayName: Messages not allowed in community
      description: Number of messages not allowed for the used SNMP community
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.nosuchnames.count
    metadata:
      displayName: "'noSuchName' errors"
      description: "Number of PDUs delivered with 'noSuchName' error"
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.values.count
    metadata:
      displayName: "'badValue' errors"
      description: "Number of PDUs delivered with 'badValue' error"
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.sys.uptime
    metadata:
      displayName: Time since the last re-start 
      description: The time (in hundredths of a second) since the network management portion of the system was last re-initialized
      unit: Unspecified
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.sys.uptime.millis
    query:
      metricSelector: '(com.dynatrace.extension.snmp-generic-cisco-device.sys.uptime) * (10)'
    metadata:
      displayName: Time since the last re-start 
      description: The time (in milliseconds) since the network management portion of the system was last re-initialized
      unit: MilliSecond
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.lastchange
    metadata:
      displayName: Last interface status change
      description: Value of 'sysUpTime' when the interface entered its current state
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.count
    metadata:
      displayName: Octets received
      description: The total number of octets received on the interface including framing characters
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count
    metadata:
      displayName: Octets received (high capacity)
      description: The total number of octets received on the interface including framing characters. This metric uses 64 bit counter and should be used for highspeed devices.
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface    
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.in.errors.count
    metadata:
      displayName: Inbound errors
      description: Number of inbound packets/transmission units with errors
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.in.discards.count
    metadata:
      displayName: Inbound discards
      description: Number of inbound packets discarded
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.count
    metadata:
      displayName: Octets transmitted
      description: The total number of octets transmitted out of the interface including framing characters
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count
    metadata:
      displayName: Octets transmitted (high capacity)
      description: The total number of octets transmitted out of the interface including framing characters. This metric uses 64 bit counter and should be used for highspeed devices.
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.out.errors.count
    metadata:
      displayName: Outbound errors
      description: Number of outbound packets/transmission units with errors
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.out.discards.count
    metadata:
      displayName: Outbound discards
      description: Number of outbound packets discarded
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.activeopens.count
    metadata:
      displayName: TCP active opens
      description: Number of transitions of TCP connections from CLOSED to SYN-SENT
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.passiveopens.count
    metadata:
      displayName: TCP passive opens
      description: Number of transitions of TCP connections from CLOSED to SYN-RCVD
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.attemptfails.count
    metadata:
      displayName: TCP failed attempts
      description: Number of transitions of TCP connections from SYN-SENT/SYN-RCVD to CLOSED and from SYN-RCVD to LISTEN
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.estab.resets.count
    metadata:
      displayName: TCP resets
      description: Number of transitions of TCP connections from ESTABLISHED/CLOSE-WAIT to CLOSED
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.curr.estab
    metadata:
      displayName: TCP connections
      description: Number of TCP connections in the ESTABLISHED/CLOSE-WAIT state
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.total
    query:
      metricSelector: '(com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count)+(com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count)'
    metadata:
      displayName: TCP segments sent + received
      description: Total number of segments sent + received
      unit: Count
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count
    metadata:
      displayName: TCP segments received
      description: Total number of segments received (including errors)
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count
    metadata:
      displayName: TCP segments sent
      description: Total number of segments sent (excluding retransmissions)
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.retrans.segs.count
    metadata:
      displayName: TCP segments retransmitted
      description: Total number of segments retransmitted
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.in.errs.count
    metadata:
      displayName: TCP segment errors
      description: Total number of segments received in error
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.out.rsts.count
    metadata:
      displayName: TCP segment resets
      description: Number of TCP segments sent containing the RST flag
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.total
    query:
      metricSelector: '(com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count)+(com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count)'
    metadata:
      displayName: UDP datagrams sent + received
      description: Total number of UDP datagrams sent + received
      unit: Count
  - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count
    metadata:
      displayName: UDP datagrams delivered
      description: Total number of UDP datagrams delivered
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.noports.count
    metadata:
      displayName: UDP datagrams received without port
      description: Number of received UDP datagrams (no application at the destination port)
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.in.errors.count
    metadata:
      displayName: UDP datagram errors
      description: Number of received and not delivered UDP datagrams (other than no application at the destination port)
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count
    metadata:
      displayName: UDP datagrams sent
      description: Total number of UDP datagrams sent
      unit: Count
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.totaltraffic
    query:
      metricSelector: '(com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count)+(com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count)+(com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count)+(com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count)'
    metadata:
      displayName: Overall TCP & UDP elements
      description: Total number of TCP segments and UDP datagrams sent and received
      unit: Count
  - key: com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed
    metadata:
      displayName: Interface speed
      description: Speed of the network interface in MegaBits per second.
      unit: MegaBitPerSecond
      sourceEntityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.bitpersec
    query:
      metricSelector: '((com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.count) * (8)):rate(1s)'
    metadata:
      displayName: Interface incoming traffic
      description: Incoming network traffic on interface in bits per second.
      unit: BitPerSecond
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.bitpersec
    query:
      metricSelector: '((com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count) * (8)):rate(1s)'
    metadata:
      displayName: Interface incoming traffic (high capacity)
      description: Incoming network traffic on interface in bits per second. This metric uses high capacity octet metrics and should be used for highspeed devices. 
      unit: BitPerSecond
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.bitpersec
    query:
      metricSelector: '((com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.count) * (8)):rate(1s)'
    metadata:
      displayName: Interface outgoing traffic
      description: Outgoing network traffic on interface in bits per second.
      unit: BitPerSecond
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.bitpersec
    query:
      metricSelector: '((com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count) * (8)):rate(1s)'
    metadata:
      displayName: Interface outgoing traffic (high capacity)
      description: Outgoing network traffic on interface in bits per second. This metric uses high capacity octet metrics and should be used for highspeed devices. 
      unit: BitPerSecond
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.bandwidth
    query:
      metricSelector: '((((((com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count) * (8)):rate(1s))+(((com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count) * (8)):rate(1s)))/((com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed) * 1000000)) * (100))'
    metadata:
      displayName: Interface bandwidth utilization
      description: Bandwidth utilization on interface. Computed as sum of incoming and outgoing traffic divided by interface speed. Presented as percentage.
      unit: Percent
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.bandwidth
    query:
      metricSelector: '(((((com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count) * (8)):rate(1s))/((com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed) * (1000000))) * (100))'
    metadata:
      displayName: Inbound bandwidth utilization
      description: Inbound bandwidth utilization on interface. Computed as sum of incoming traffic divided by interface speed. Presented as percentage.
      unit: Percent
  - key: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.bandwidth
    query:
      metricSelector: '(((((com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count) * (8)):rate(1s))/((com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed) * (1000000))) * (100))'
    metadata:
      displayName: Outbound bandwidth utilization
      description: Outbound bandwidth utilization on interface. Computed as sum of outgoing traffic divided by interface speed. Presented as percentage.
      unit: Percent

snmp:
  - group: generic-cisco-device
    interval:
       minutes: 1
    dimensions:
      - key: sys.name
        value: oid:1.3.6.1.2.1.1.5.0
      - key: sys.contact
        value: oid:1.3.6.1.2.1.1.4.0
      - key: activation.tag
        value: var:ext.activationtag
      - key: device.port
        value: this:device.port

    subgroups:
      - subgroup: Device CPU & RAM consumption
        table: true
        metrics:
          - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.total.5min.rev
            value: oid:1.3.6.1.4.1.9.9.109.1.1.1.1.8
            type: gauge
          - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.loadavg.5min
            value: oid:1.3.6.1.4.1.9.9.109.1.1.1.1.25
            type: gauge
          - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.used
            value: oid:1.3.6.1.4.1.9.9.109.1.1.1.1.17
            type: gauge
          - key: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.free
            value: oid:1.3.6.1.4.1.9.9.109.1.1.1.1.19
            type: gauge

      - subgroup: Device Info for entity attributes
        table: false
        dimensions:
        - key: sys.description
          value: oid:1.3.6.1.2.1.1.1.0
        - key: sys.objectid
          value: oid:1.3.6.1.2.1.1.2.0
        - key: sys.location
          value: oid:1.3.6.1.2.1.1.6.0
        - key: sys.services
          value: oid:1.3.6.1.2.1.1.7.0
        - key: if.count
          value: oid:1.3.6.1.2.1.2.1.0
        metrics:
        - key: com.dynatrace.extension.snmp-generic-cisco-device.sys.uptime
          value: oid:1.3.6.1.2.1.1.3.0
          type: gauge

      - subgroup: Device health (Fans)
        featureSet: Sensors
        table: true
        dimensions:
          - key: envmon.fan.status.descr
            value: oid:1.3.6.1.4.1.9.9.13.1.4.1.2
        metrics:
          - key: com.dynatrace.extension.snmp-generic-cisco-device.envmon.fan.state
            value: oid:1.3.6.1.4.1.9.9.13.1.4.1.3
            type: gauge

      - subgroup: Device health (Temperature)
        featureSet: Sensors
        table: true
        dimensions:
          - key: envmon.temperature.status.descr
            value: oid:1.3.6.1.4.1.9.9.13.1.3.1.2
        metrics:
          - key: com.dynatrace.extension.snmp-generic-cisco-device.envmon.temperature.status.value
            value: oid:1.3.6.1.4.1.9.9.13.1.3.1.3
            type: gauge

      - subgroup: SNMP health
        featureSet: Health
        table: false
        metrics:
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.pkts.count
            value: oid:1.3.6.1.2.1.11.1.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.silentdrops.count
            value: oid:1.3.6.1.2.1.11.31.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.versions.count
            value: oid:1.3.6.1.2.1.11.3.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.names.count
            value: oid:1.3.6.1.2.1.11.4.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.uses.count
            value: oid:1.3.6.1.2.1.11.5.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.nosuchnames.count
            value: oid:1.3.6.1.2.1.11.9.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.values.count
            value: oid:1.3.6.1.2.1.11.10.0
            type: count

      - subgroup: NIC status
        featureSet: Interfaces
        table: true
        dimensions:
          - key: if.idx
            value: oid:1.3.6.1.2.1.2.2.1.1
          - key: if.descr
            value: oid:1.3.6.1.2.1.2.2.1.2
            filter: var:if_name
          - key: if.type
            value: oid:1.3.6.1.2.1.2.2.1.3
          - key: if.mtu  # Largest packet/datagram which can be sent/received on the interface
            value: oid:1.3.6.1.2.1.2.2.1.4
          - key: if.speed
            value: oid:1.3.6.1.2.1.2.2.1.5
          - key: if.highspeed
            value: oid:1.3.6.1.2.1.31.1.1.1.15
          - key: if.adminstatus  # The desired state of the interface - up(1), down(2), testing(3)
            value: oid:1.3.6.1.2.1.2.2.1.7
            filter: var:if_admin_status
          - key: if.operstatus  # The current operational state of the interface - up(1), down(2), testing(3), unknown(4), dormant(5), notPresent(6), lowerLayerDown(7)
            value: oid:1.3.6.1.2.1.2.2.1.8
            filter: var:if_oper_status
          - key: if.promiscuousmode  # True if this interface accepts all packets/frames, false if only accepts packets/frames addressed to this station
            value: oid:1.3.6.1.2.1.31.1.1.1.16
          - key: if.alias
            value: oid:1.3.6.1.2.1.31.1.1.1.18
        metrics:
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.lastchange
            value: oid:1.3.6.1.2.1.2.2.1.9
            type: gauge
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed
            #Interface highspeed - required as separate metric to compute interface bandwidth utilization
            value: oid:1.3.6.1.2.1.31.1.1.1.15
            type: gauge
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.count
            #The total number of octets received on the interface including framing characters.
            value: oid:1.3.6.1.2.1.2.2.1.10
            type: count
            featureSet: "Interfaces 32-bit"
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count
            #"The total number of octets received on the interface including framing characters. 64bit version
            value: oid:1.3.6.1.2.1.31.1.1.1.6
            type: count
            featureSet: "Interfaces 64-bit"
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.count
            #The total number of octets transmitted out of the interface including framing characters.
            value: oid:1.3.6.1.2.1.2.2.1.16
            type: count
            featureSet: "Interfaces 32-bit"
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count
            #The total number of octets transmitted out of the interface including framing characters. 64bit version 
            value: oid:1.3.6.1.2.1.31.1.1.1.10
            type: count   
            featureSet: "Interfaces 64-bit"            
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.in.errors.count
            #The number of inbound packets/transmission units with errors
            value: oid:1.3.6.1.2.1.2.2.1.14
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.in.discards.count
            #The number of inbound packets discarded possibly due to full buffers
            value: oid:1.3.6.1.2.1.2.2.1.13
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.out.errors.count
            value: oid:1.3.6.1.2.1.2.2.1.20
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.if.out.discards.count
            #The number of outbound packets discarded possibly due to full buffers
            value: oid:1.3.6.1.2.1.2.2.1.19
            type: count

      - subgroup: Transport layer statistics
        featureSet: Traffic
        table: false
        metrics:
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.activeopens.count
            value: oid:1.3.6.1.2.1.6.5.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.passiveopens.count
            value: oid:1.3.6.1.2.1.6.6.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.attemptfails.count
            value: oid:1.3.6.1.2.1.6.7.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.estab.resets.count
            value: oid:1.3.6.1.2.1.6.8.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.curr.estab
            value: oid:1.3.6.1.2.1.6.9.0
            type: gauge
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count
            value: oid:1.3.6.1.2.1.6.17.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count
            value: oid:1.3.6.1.2.1.6.18.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.retrans.segs.count
            value: oid:1.3.6.1.2.1.6.12.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.in.errs.count
            #The total number of segments received in error (e.g. bad TCP checksums)
            value: oid:1.3.6.1.2.1.6.14.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.tcp.out.rsts.count
            value: oid:1.3.6.1.2.1.6.15.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count
            value: oid:1.3.6.1.2.1.7.8.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.noports.count
            value: oid:1.3.6.1.2.1.7.2.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.in.errors.count
            value: oid:1.3.6.1.2.1.7.3.0
            type: count
          - key: com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count
            value: oid:1.3.6.1.2.1.7.9.0
            type: count

dashboards:
  - path: "dashboards/generic-cisco-device-dashboard.json"
alerts:
  - path: "alerts/inbound_bandwidth_alert.json"
  - path: "alerts/outbound_bandwidth_alert.json"

topology:
  types:
    - name: snmp:com_dynatrace_extension_snmp_generic_cisco_device
      displayName: Generic SNMP Cisco Device
      enabled: true
      rules:
      - idPattern: snmp_generic_cisco_device_{device.address}
        sources:
        - sourceType: Metrics
          condition: $prefix(com.dynatrace.extension.snmp-generic-cisco-device)
        attributes:
        - pattern: '{sys.contact}'
          key: system_contact
          displayName: System Contact
        - pattern: '{sys.name}'
          key: system_name
          displayName: Device Name
        - pattern: '{device.address}'
          key: dt.ip_addresses
          displayName: Device Address
        - pattern: '{sys.description}'
          key: system_descr
          displayName: Description
        - pattern: '{sys.location}'
          key: system_location
          displayName: Location
        - pattern: '{if.count}'
          key: interface_count
          displayName: Network Interface Count
        - pattern: '{device.port}'
          key: dt.listen_ports
          displayName: Device Port
        - pattern: '{device.name}'
          key: dt.dns_names
          displayName: Device DNS Name
        requiredDimensions: []
        instanceNamePattern: Cisco network device {sys.name} @ {device.address}:{device.port}

    - name: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
      displayName: Generic SNMP Cisco Device Network Interface
      enabled: true
      rules:
      - idPattern: snmp_generic_cisco_network_interface_{device.address}-{if.idx}
        sources:
        - sourceType: Metrics
          condition: $prefix(com.dynatrace.extension.snmp-generic-cisco-device.if)
        attributes:
        - pattern: '{device.address}'
          key: dt.ip_addresses
          displayName: Network device address
        - pattern: '{if.promiscuousmode}'
          key: promiscuousMode
          displayName: PromiscuousMode
        - pattern: '{if.speed}'
          key: speed
          displayName: Interface Speed
        - pattern: '{if.highspeed}'
          key: highspeed
          displayName: Interface Speed (Mbps)
        - pattern: '{if.type}'
          key: type
          displayName: Interface Type
        - pattern: '{if.operstatus}'
          key: opStatus
          displayName: Operational Status
        - pattern: '{if.mtu}'
          key: mtu
          displayName: MTU
        - pattern: '{if.descr}'
          key: description
          displayName: Description
        - pattern: '{if.adminstatus}'
          key: adminStatus
          displayName: Admin Status
        requiredDimensions: []
        instanceNamePattern: Cisco network interface {if.descr} @ {device.name}

  relationships:
    - typeOfRelation: CHILD_OF
      fromType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
      toType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
      enabled: true
      sources:
      - sourceType: Metrics
        condition: $prefix(com.dynatrace.extension.snmp-generic-cisco-device)
    - typeOfRelation: SAME_AS
      fromType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
      toType: snmptraps:com_dynatrace_ext_snmp-traps
      enabled: true
      sources:
      - sourceType: Entities
        mappingRules:
          - sourceProperty: dt.ip_addresses
            sourceTransformation: Leave text as-is
            destinationProperty: dt.ip_addresses
            destinationTransformation: Leave text as-is

screens:
  - entityType: snmptraps:com_dynatrace_ext_snmp-traps
    detailsInjections:
      - type: MESSAGE
        key: related-cisco-entity
        width: FULL_SIZE
        conditions:
          - relatedEntity|entitySelectorTemplate=type(snmp:com_dynatrace_extension_snmp_generic_cisco_device),fromRelationships.isSameAs($(entityConditions))
    messageCards:
      - key: related-cisco-entity
        type: MESSAGE
        message:
          text: Jump to related [Cisco device](relatedEntityScreen|entitySelectorTemplate=type(snmp:com_dynatrace_extension_snmp_generic_cisco_device),fromRelationships.isSameAs($(entityConditions))|name=Cisco device)
          theme: INFO

  - entityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
    propertiesCard:
    - target: PLATFORM
      dqlQuery:
        query: fetch `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device` | filter id == $(entityId) | fields system_name, system_contact
      properties:
        - type: DQL
          dql:
            field: system_name
            displayName: Name
        - type: DQL
          dql:
            field: system_contact
            displayName: System contact
    - target: CLASSIC
      properties:
        - type: ATTRIBUTE
          attribute:
            key: system_name
            displayName: Name
        - type: ATTRIBUTE     #hide this one as we already display name
          attribute:
            key: dt.dns_names
            displayName: DNS name
            hidden: true
    detailsSettings:
      target: BOTH  #  TODO - layout will be applied to both gens. You may want to duplicate the details settings and provide separeate objects for 2nd and 3rd gen
      staticContent:
        breadcrumbs:
          - entityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
            type: ENTITY_LIST_REF
        showProblems: true
        showProperties: true
        showAddTag: true
        showTags: true
        showGlobalFilter: false
      layout:
        autoGenerate: false
        cards:
          - type: CHART_GROUP
            key: device_stats
          - type: CHART_GROUP
            key: device_health
          - type: CHART_GROUP
            key: network_stats
          - type: CHART_GROUP
            key: snmp_health
          - type: ENTITIES_LIST
            key: network_interfaces
          - type: DQL_TABLE
            key: network_interfaces_dql
          - conditions:
            - '!extensionConfigured|extensionId=com.dynatrace.extension.snmp-traps-generic'
            key: snmp_traps_info
            type: MESSAGE
            width: FULL_SIZE
          - type: CHART_GROUP
            key: traps_stats
            conditions:
            - extensionConfigured|extensionId=com.dynatrace.extension.snmp-traps-generic
          - conditions:
            - extensionConfigured|extensionId=com.dynatrace.extension.snmp-traps-generic
            key: traps_logs
            type: LOGS
            width: FULL_SIZE
          - type: INJECTIONS
    messageCards:
      - key: snmp_traps_info
        type: MESSAGE
        message:
          text: Set up [SNMP Traps](hubExtension|extensionId=com.dynatrace.extension.snmp-traps-generic|text=SNMP Traps) extension to improve observability of this device
          theme: INFO
    logsCards:
    - displayName: Traps and logs
      target: BOTH
      enablePaging: true
      filterQuery: dt.source_entity inEntitySelector "type(snmptraps:com_dynatrace_ext_snmp-traps),toRelationships.isSameAs($(entityConditions))"
      key: traps_logs
      pageSize: 10
      showFiltering: true
      dqlQueryTable: fetch logs| filter dt.source_entity in [ fetch `dt.entity.snmptraps:com_dynatrace_ext_snmp-traps` | filter in(same_as[`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`], $(entityId))| fields id ]
      dqlQueryChart: timeseries count=sum(dt.log.status_per_entity_count), by:{splitField = dt.source_entity} | filter splitField in [ fetch `dt.entity.snmptraps:com_dynatrace_ext_snmp-traps` | filter in(same_as[`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`], $(entityId)) | fields id]

    chartsCards:
      - key: traps_stats
        target: BOTH
        mode: NORMAL
        entitySelectorTemplate: type(snmptraps:com_dynatrace_ext_snmp-traps),toRelationships.isSameAs($(entityConditions))
        charts:
        - conditions: []
          displayName: Traps Count
          graphChartConfig:
            metrics:
              - metricSelector: com.dynatrace.extension.snmp-traps-generic.traps.count:splitBy()
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-traps-generic.traps.count`)  # TODO - query was not enriched with entity filter - check it manually.
                visualization:
                  displayName: Traps count
                  seriesType: COLUMN
            yAxes: []
          visualizationType: GRAPH_CHART
        - conditions: []
          displayName: Trap OIDs
          graphChartConfig:
            metrics:
              - metricSelector: com.dynatrace.extension.snmp-traps-generic.traps.count:splitBy("trapoid")
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-traps-generic.traps.count`),by:{trapoid}  # TODO - query was not enriched with entity filter - check it manually.
                visualization:
                  seriesType: COLUMN
            stacked: true
            yAxes: []
          visualizationType: GRAPH_CHART
        conditions: []
        displayName: Traps Statistics
        numberOfVisibleCharts: 2
      - key: snmp_health
        target: BOTH
        mode: NORMAL
        displayName: SNMP Statistics
        numberOfVisibleCharts: 4
        charts:
          - displayName: Request Problems
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.snmp.silentdrops.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.silentdrops.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.versions.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.versions.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              visualization:
                themeColor: DEFAULT
                seriesType: AREA
          - displayName: SNMP Messages
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.pkts.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.pkts.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
          - displayName: PDU Problems
            visualizationType: GRAPH_CHART
            graphChartConfig:
              visualization:
                themeColor: DEFAULT
                seriesType: COLUMN
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.values.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.values.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.nosuchnames.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.nosuchnames.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
          - displayName: Community Problems
            visualizationType: GRAPH_CHART
            graphChartConfig:
              visualization:
                themeColor: DEFAULT
                seriesType: AREA
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.uses.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.uses.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: 
                  com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.names.count
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.snmp.in.bad.community.names.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
      - key: network_stats
        target: BOTH
        mode: NORMAL
        displayName: Network Statistics
        numberOfVisibleCharts: 3
        charts:
          - displayName: Network Interfaces Traffic
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.bitpersec:splitBy()
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=count[]*8/toDouble(interval/1s)|fieldsRemove count|summarize 
                  expression=sum(expression[]),interval=takeAny(interval),timeframe=takeAny(timeframe),by:{}  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
              - metricSelector: 
                  func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.bitpersec:splitBy()
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=count[]*8/toDouble(interval/1s)|fieldsRemove count|summarize 
                  expression=sum(expression[]),interval=takeAny(interval),timeframe=takeAny(timeframe),by:{}  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
          - displayName: Interfaces Bandwidth Utilization
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.bandwidth:splitBy()
                dqlQuery: timeseries 
                  in.octets.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),out.octets.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count`),highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=(((in.octets.count[]*8)+(out.octets.count[]*8))/(highspeed[]*1000000))*100/toDouble(interval/1s)|fieldsRemove
                  in.octets.count,out.octets.count,highspeed|summarize 
                  expression=sum(expression[]),interval=takeAny(interval),timeframe=takeAny(timeframe),by:{}  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL, rate is not supported for DQL
                  # ->! manually adjusted with '/toDouble(interval/1s)'
          - displayName: Overall TCP & UDP Traffic
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.totaltraffic
                dqlQuery: timeseries 
                  in.datagrams.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count`),out.datagrams.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count`),in.segs.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count`),out.segs.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=in.datagrams.count[]+out.datagrams.count[]+in.segs.count[]+out.segs.count[]|fieldsRemove
                  in.datagrams.count,out.datagrams.count,in.segs.count,out.segs.count
          - displayName: Bandwidth Utilization In & Out
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.bandwidth:splitBy()
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=((count[]*8)/(highspeed[]*1000000))*100/toDouble(interval/1s)|fieldsRemove count,highspeed|summarize
                  expression=sum(expression[]),interval=takeAny(interval),timeframe=takeAny(timeframe),by:{}  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  # ->! manually adjusted with '/toDouble(interval/1s)'
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.bandwidth:splitBy()
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count`),highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=((count[]*8)/(highspeed[]*1000000))*100/toDouble(interval/1s)|fieldsRemove count,highspeed|summarize
                  expression=sum(expression[]),interval=takeAny(interval),timeframe=takeAny(timeframe),by:{}  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  # -> ! manually adjusted with '/toDouble(interval/1s)'
          - displayName: Overall TCP Traffic
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.total
                dqlQuery: timeseries 
                  in.segs.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count`),out.segs.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=in.segs.count[]+out.segs.count[]|fieldsRemove in.segs.count,out.segs.count
          - displayName: TCP traffic
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.in.segs.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.hc.out.segs.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
          - displayName: Overall UDP Traffic
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.total
                dqlQuery: timeseries 
                  in.datagrams.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count`),out.datagrams.count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}|fieldsAdd
                  expression=in.datagrams.count[]+out.datagrams.count[]|fieldsRemove in.datagrams.count,out.datagrams.count
          - displayName: UDP Traffic
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.in.datagrams.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.hc.out.datagrams.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
          - displayName: Errors
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.tcp.in.errs.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.tcp.in.errs.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.udp.in.errors.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.udp.in.errors.count`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
      - key: device_stats
        target: BOTH
        mode: NORMAL
        displayName: Device Statistics
        numberOfVisibleCharts: 3
        charts:
          - displayName: CPU busy
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.total."5min".rev
                dqlQuery: timeseries rev=avg(`com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.total.5min.rev`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
          - displayName: CPU load
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.loadavg."5min"
                dqlQuery: timeseries avg(`com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.loadavg.5min`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
          - displayName: CPU memory
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.used
                dqlQuery: timeseries used=avg(`com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.used`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.free
                dqlQuery: timeseries free=avg(`com.dynatrace.extension.snmp-generic-cisco-device.cpm.cpu.memory.hc.free`),by:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,sys.contact,device.address,device.name,dt.metrics.source,device.port,device,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`==$(entityId)}
      - key: device_health
        target: BOTH
        mode: NORMAL
        displayName: Device Health
        numberOfVisibleCharts: 2
        conditions:
        - extensionConfigured|extensionId=com.dynatrace.extension.snmp-generic-cisco-device|featureSets=Sensors
        charts:
          - displayName: Fan temperature
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.envmon.temperature.status.value:splitBy(envmon.temperature.status.descr)
                dqlQuery: timeseries  value=avg(`com.dynatrace.extension.snmp-generic-cisco-device.envmon.temperature.status.value`),by:{envmon.temperature.status.descr}  # TODO - query was not enriched with entity filter - check it manually.
          - displayName: Fan state
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.envmon.fan.state:splitBy(envmon.fan.status.descr)
                dqlQuery: timeseries  state=avg(`com.dynatrace.extension.snmp-generic-cisco-device.envmon.fan.state`),by:{envmon.fan.status.descr}  # TODO - query was not enriched with entity filter - check it manually.
    entitiesListCards:
      - key: network_interfaces
        displayName: Network Interfaces
        entitySelectorTemplate: type(snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface), fromRelationships.isChildOf($(entityConditions))
        pageSize: 10
        displayCharts: true
        enableDetailsExpandability: true
        numberOfVisibleCharts: 2
        charts:
        - displayName: Traffic 64-bit
          visualizationType: GRAPH_CHART
          graphChartConfig:
            metrics:
            - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.bitpersec
            - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.bitpersec
        - displayName: Bandwidth
          visualizationType: GRAPH_CHART
          graphChartConfig:
            metrics:
            - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.bandwidth
            - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.bandwidth
        - displayName: Traffic 32-bit
          visualizationType: GRAPH_CHART
          graphChartConfig:
            metrics:
            - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.bitpersec
            - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.bitpersec
        displayIcons: true
        columns:
        - type: ATTRIBUTE
          attribute:
            key: highspeed
            displayName: IF speed (Mbps)
        - type: ATTRIBUTE
          attribute:
            key: type
            displayName: IF type
        - type: ATTRIBUTE
          attribute:
            key: opStatus
            displayName: Operational status
        filtering:
          relationships:
          - type(snmp:com_dynatrace_extension_snmp_generic_cisco_device), toRelationships.isChildOf($(entityConditions))
          entityFilters:
          - displayName: Filters
            filters:
            - type: entityName
              entityTypes:
              - snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
              displayName: Name
              freeText: true
              modifier: contains
              defaultSearch: true
              distinct: true
            - type: opStatus
              entityTypes:
              - snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
              displayName: Operational status
              freeText: true
              modifier: contains
              defaultSearch: false
              distinct: true
    dqlTableCards:
    - key: network_interfaces_dql
      displayName: Network Interfaces
      query:
        query: fetch `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`| filter child_of[`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`]
          == $(entityId) | fields name = record(entityId=id, displayName=entity.name), highspeed, opStatus, type, id
        lookups:
        - query: 'timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count`),
            by: { `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`}|
            fieldsAdd tmp=(count[]*8)/toDouble(interval/1s)|fieldsAdd trafficOut = arrayLast(tmp)|fieldsRemove count'
          sourceField: id
          lookupField: "`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`"
          fields:
          - trafficOut
        - query: 'timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),
            by: { `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`}|
            fieldsAdd tmp=(count[]*8)/toDouble(interval/1s)|fieldsAdd trafficIn = arrayLast(tmp)| fieldsRemove count'
          sourceField: id
          lookupField: "`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`"
          fields:
          - trafficIn
        - query: ' timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),
            highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),
            by: { `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,
            `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`}| fieldsAdd
            expression=((count[]*8)/(highspeed[]*1000000))*100| fieldsAdd bandwidthOut
            = arrayLast(expression)| fieldsRemove count, highspeed'
          sourceField: id
          lookupField: "`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`"
          fields:
          - bandwidthOut
        - query: ' timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),
            highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),
            by: { `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,
            `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`}| fieldsAdd
            expression=((count[]*8)/(highspeed[]*1000000))*100| fieldsAdd bandwidthIn
            = arrayLast(expression)| fieldsRemove count, highspeed'
          sourceField: id
          lookupField: "`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`"
          fields:
          - bandwidthIn
        - query: 'timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.count`),
            by: { `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`}|
            fieldsAdd tmp=(count[]*8)/toDouble(interval/1s)|fieldsAdd trafficOut32 = arrayLast(tmp)
            | fieldsRemove count'
          sourceField: id
          lookupField: "`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`"
          fields:
          - trafficOut32
        - query: 'timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.count`),
            by: { `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`}|
            fieldsAdd tmp=(count[]*8)/toDouble(interval/1s)|fieldsAdd trafficIn32 = arrayLast(tmp)
            | fieldsRemove count'
          sourceField: id
          lookupField: "`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`"
          fields:
          - trafficIn32
      perspectives:
        - name: Traffic 64-bit
          columns:
            - field: highspeed
            - field: type
            - field: opStatus
            - field: trafficOut
            - field: trafficIn
            - field: bandwidthOut
            - field: bandwidthIn
        - name: Traffic 32-bit
          columns:
            - field: highspeed
            - field: type
            - field: opStatus
            - field: trafficOut32
            - field: trafficIn32
      columns:
      - field: name
        displayName: Name
        columnType: TEXT
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: highspeed
        displayName: IF speed
        columnType: TEXT
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: type
        displayName: IF type
        columnType: TEXT
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: opStatus
        displayName: Operational status
        columnType: TEXT
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: trafficOut
        displayName: Traffic Out 64-bit
        columnType: NUMBER
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: trafficIn
        displayName: Traffic In 64-bit
        columnType: NUMBER
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: bandwidthOut
        displayName: Outbound bandwidth utilization
        columnType: NUMBER
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: bandwidthIn
        displayName: Inbound bandwidth utilization
        columnType: NUMBER
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: trafficOut32
        displayName: Traffic Out 32-bit
        columnType: NUMBER
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true
      - field: trafficIn32
        displayName: Traffic In 32-bit
        columnType: NUMBER
        widthType: AUTO
        defaultColumn: false
        resizable: true
        sortable: true

  - entityType: snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface
    detailsSettings:
      target: BOTH  #  TODO - layout will be applied to both gens. You may want to duplicate the details settings and provide separeate objects for 2nd and 3rd gen
      layout:
        autoGenerate: false
        cards:
        - key: traffic
          type: CHART_GROUP
        - key: other
          type: CHART_GROUP
        - type: INJECTIONS
      staticContent:
        breadcrumbs:
        - entityType: snmp:com_dynatrace_extension_snmp_generic_cisco_device
          type: ENTITY_LIST_REF
        - entitySelectorTemplate: 
            type(snmp:com_dynatrace_extension_snmp_generic_cisco_device),toRelationships.isChildOf($(entityConditions))
          type: ENTITY_REF
        - type: PLATFORM_ENTITY
          dqlField: device.relation_record
        breadcrumbsDqlQuery:
          query: fetch `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`|
            filter id == "CUSTOM_DEVICE-8359387C03A90E86"| fields device.id = child_of[`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`]
          lookups:
          - query: fetch `dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`|
              fields id, device.relation_record = record(entityId = id, displayName = entity.name)
            sourceField: device.id
            lookupField: id
            fields:
            - device.relation_record
        showAddTag: true
        showGlobalFilter: false
        showProblems: true
        showProperties: true
        showTags: true
    chartsCards:
      - key: traffic
        target: BOTH
        mode: NORMAL
        displayName: Interface traffic
        numberOfVisibleCharts: 2
        charts:
          - displayName: Traffic 64-bit
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: 
                  func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.bitpersec
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}|fieldsAdd
                  expression=count[]*8/toDouble(interval/1s)|fieldsRemove count  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.bitpersec
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}|fieldsAdd
                  expression=count[]*8/toDouble(interval/1s)|fieldsRemove count  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
          - displayName: Bandwidth utilization
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.bandwidth
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.out.octets.count`),highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}|fieldsAdd
                  expression=((count[]*8)/(highspeed[]*1000000))*100/toDouble(interval/1s)|fieldsRemove count,highspeed  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.bandwidth
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.hc.in.octets.count`),highspeed=avg(`com.dynatrace.extension.snmp-generic-cisco-device.if.highspeed`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}|fieldsAdd
                  expression=((count[]*8)/(highspeed[]*1000000))*100/toDouble(interval/1s)|fieldsRemove count,highspeed  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
          - displayName: Traffic 32-bit
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.bitpersec
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.out.octets.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}|fieldsAdd
                  expression=count[]*8/toDouble(interval/1s)|fieldsRemove count  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
              - metricSelector: func:com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.bitpersec
                dqlQuery: timeseries 
                  count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.in.octets.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}|fieldsAdd
                  expression=count[]*8/toDouble(interval/1s)|fieldsRemove count  # TODO - transpiled returned PARTIAL_SUCCESS, warnings: rate is not supported for DQL
                  #  ->! manually adjusted with '/toDouble(interval/1s)'
      - key: other
        target: BOTH
        mode: NORMAL
        displayName: Errors and discards
        numberOfVisibleCharts: 2
        charts:
          - displayName: Errors
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.if.out.errors.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.out.errors.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.if.in.errors.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.in.errors.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}
          - displayName: Discards
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.if.out.discards.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.out.discards.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}
              - metricSelector: com.dynatrace.extension.snmp-generic-cisco-device.if.in.discards.count
                dqlQuery: timeseries count=sum(`com.dynatrace.extension.snmp-generic-cisco-device.if.in.discards.count`),by:{if.operstatus,sys.contact,device.address,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`,dt.metrics.source,if.speed,device.port,if.idx,if.highspeed,if.type,`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_device`,if.descr,device.name,if.adminstatus,device,if.mtu,if.promiscuousmode,sys.name},filter:{`dt.entity.snmp:com_dynatrace_extension_snmp_generic_cisco_network_interface`==$(entityId)}
    propertiesCard:
      displayOnlyConfigured: false
      properties:
      - type: RELATION
        relation:
          displayName: Device
          entitySelectorTemplate: 
            type(snmp:com_dynatrace_extension_snmp_generic_cisco_device),toRelationships.isChildOf($(entityConditions))
      - type: ATTRIBUTE
        attribute:
          key: speed
          displayName: Speed
          hidden: true
      - type: ATTRIBUTE
        attribute:
          key: highspeed
          displayName: Speed (Mbps)
          unit: MegaBitPerSecond
